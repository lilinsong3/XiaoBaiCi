plugins {
    id 'com.android.application'
    id 'androidx.navigation.safeargs'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.android'
}

android {
    // local.properties文件
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    // 签名 key 信息
    def signingKeyStoreFile = file(properties.getProperty("storeFileDir"))
    def signingKeyStorePwd = properties.getProperty("storePassword")
    def signingKeyAlias = properties.getProperty("keyAlias")
    def signingKeyPwd = properties.getProperty("keyPassword")

    signingConfigs {
        debug {
            storeFile signingKeyStoreFile
            storePassword signingKeyStorePwd
            keyAlias signingKeyAlias
            keyPassword signingKeyPwd
        }
        release {
            storeFile signingKeyStoreFile
            storePassword signingKeyStorePwd
            keyAlias signingKeyAlias
            keyPassword signingKeyPwd
        }
    }
    namespace 'com.github.lilinsong3.xiaobaici'
    compileSdk 33

    defaultConfig {
        applicationId 'com.github.lilinsong3.xiaobaici'
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        // custom test runner for hilt app
        testInstrumentationRunner "com.github.lilinsong3.xiaobaici.AppTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"
                ]
            }
        }
    }

//    flavorDimensions "version"
//    productFlavors {
//        dev {
//            // The following configuration limits the "dev" flavor to using
//            // English string resources and xxhdpi screen-density resources.
//            dimension "version"
//            applicationIdSuffix ".dev"
//            versionNameSuffix "-dev"
//            resourceConfigurations += ["xxhdpi"]
//        }
//    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            crunchPngs false
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.core:core-ktx:1.8.0'
    def lifecycle_version = "2.5.1"
    def arch_version = "2.1.0"

    def nav_version = "2.5.3"

    def paging_version = "3.1.1"

    def room_version = "2.5.0"

    def fragment_version = "1.5.5"

    def autoDispose_version = "2.1.1"

    implementation "com.google.dagger:hilt-android:2.44"
    annotationProcessor "com.google.dagger:hilt-compiler:2.44"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"

    // optional - Test helpers
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"

    implementation "androidx.paging:paging-runtime:$paging_version"

    // optional - RxJava3 support
    implementation "androidx.paging:paging-rxjava3:$paging_version"

//    implementation "androidx.paging:paging-testing:$paging_version"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Feature module Support
    // implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    // annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    // optional - Test helpers for Lifecycle runtime
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version"

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'

    implementation "com.uber.autodispose2:autodispose-androidx-lifecycle:$autoDispose_version"


//    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
//    implementation 'com.github.bumptech.glide:glide:4.15.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.fragment:fragment:$fragment_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    // For control over item selection of both touch and mouse driven selection
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation "androidx.preference:preference:1.2.0"
    // https://mvnrepository.com/artifact/org.commonmark/commonmark
    implementation 'org.commonmark:commonmark:0.21.0'

    // Preferences DataStore (SharedPreferences like APIs)
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore-preferences-rxjava3:1.0.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    // ...with Java.
    androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.44'
}